/* ...existing code... */

:root {
  --quantum-phase: 0deg;
  --wave-amplitude: 20px;
  --interference-pattern: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 10px,
    rgba(0, 255, 255, 0.1) 10px,
    rgba(0, 255, 255, 0.1) 20px
  );
}

@property --quantum-phase {
  syntax: '<angle>';
  initial-value: 0deg;
  inherits: false;
}

.app-container {
  /* ...existing code... */
  background: 
    radial-gradient(ellipse at 20% 80%, rgba(0, 255, 255, 0.15) 0%, transparent 50%),
    radial-gradient(ellipse at 80% 20%, rgba(255, 0, 255, 0.15) 0%, transparent 50%),
    radial-gradient(ellipse at 40% 40%, rgba(255, 255, 0, 0.1) 0%, transparent 50%),
    var(--interference-pattern),
    linear-gradient(180deg, #0a0a0a 0%, #0f0f1f 100%);
  animation: quantum-flux 20s infinite linear;
}

@keyframes quantum-flux {
  0% { --quantum-phase: 0deg; }
  100% { --quantum-phase: 360deg; }
}

.session-tile {
  position: relative;
  background: rgba(0, 20, 40, 0.8);
  border: 1px solid rgba(0, 255, 255, 0.3);
  border-radius: 8px;
  padding: 12px;
  backdrop-filter: blur(10px) saturate(150%);
  transform: translateZ(0);
  will-change: transform, opacity;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  container-type: inline-size;
  
  /* GPU-accelerated shadows */
  box-shadow: 
    0 0 20px rgba(0, 255, 255, 0.1),
    inset 0 0 10px rgba(0, 255, 255, 0.05);
}

.session-tile::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: conic-gradient(
    from var(--quantum-phase),
    transparent,
    rgba(0, 255, 255, 0.5),
    transparent,
    rgba(255, 0, 255, 0.5),
    transparent
  );
  border-radius: 8px;
  z-index: -1;
  opacity: 0;
  transition: opacity 0.3s;
  animation: rotate 4s linear infinite;
}

.session-tile:hover::before {
  opacity: 1;
}

@keyframes rotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.session-tile:hover {
  transform: translateZ(10px) scale(1.02);
  border-color: rgba(0, 255, 255, 0.6);
  box-shadow: 
    0 10px 40px rgba(0, 255, 255, 0.2),
    inset 0 0 20px rgba(0, 255, 255, 0.1);
}

.metric {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 4px 0;
  font-size: 0.9em;
}

.metric-value {
  font-weight: bold;
  color: #0ff;
  text-shadow: 0 0 5px currentColor;
  font-variant-numeric: tabular-nums;
}

.control-matrix {
  /* ...existing code... */
  background: 
    linear-gradient(180deg, rgba(0, 0, 0, 0.95) 0%, rgba(0, 10, 20, 0.95) 100%);
  backdrop-filter: blur(20px) brightness(1.1);
  transform: translateZ(0);
}

.virtual-grid {
  /* GPU acceleration */
  transform: translateZ(0);
  will-change: scroll-position;
  contain: strict;
}

.webgl-canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  opacity: 0.3;
  mix-blend-mode: screen;
}

/* Container queries for responsive design */
@container (min-width: 400px) {
  .session-tile {
    grid-template-columns: 1fr 1fr;
  }
}

@container (min-width: 600px) {
  .session-tile {
    grid-template-columns: repeat(3, 1fr);
  }
}

/* High-performance scrollbar */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.5);
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(180deg, #0ff, #f0f);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(180deg, #0ff, #ff0);
}

/* Optimize for 120Hz displays */
@media (prefers-reduced-motion: no-preference) {
  * {
    animation-duration: calc(var(--animation-duration, 1s) * 0.5);
  }
}

@media (min-resolution: 2dppx) {
  /* High DPI optimizations */
  .session-tile {
    image-rendering: crisp-edges;
    font-smoothing: antialiased;
    -webkit-font-smoothing: antialiased;
  }
}

/* Dark mode enhancements */
@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;
  }
}